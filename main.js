(()=>{"use strict";class t{constructor(t){this.length=t,this.hits=0,this.sunk=!1}get length(){return this._length}set length(t){this._length=t}hit(){this.hits+=1,this.isSunk()}isSunk(){this.hits==this.length&&(this.sunk=!0)}}class e{constructor(){this.board=[new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1})))],this.ships=[]}placeShip(e,i,r){if(null==this.board[e][i].ship){let a=new t(r);this.ships.push(a);for(let t=i;t<i+r;t++)this.board[e][t].ship=a}}receiveAttack(t,e){null!=this.board[t][e].ship?(this.board[t][e].ship.hit(),this.board[t][e].isHit=!0):null==this.board[t][e].ship&&(this.board[t][e].isHit=!0)}allShipsSunk(){if(this.ships.every((t=>1==t.sunk)))return!0}}class i{constructor(){this.gameboard=new e}generateCoord(){return Math.floor(10*Math.random())}takeTurn(t,e,i){t.receiveAttack(e,i)}takeTurnAI(t){let e=0,i=0,r=!0;for(;r;)e=this.generateCoord(),i=this.generateCoord(),0==t.board[e][i].isHit&&(t.receiveAttack(e,i),r=!1)}}let r=document.querySelector(".human-grid"),a=document.querySelector(".computer-grid");function l(){n(r);for(let t=0;t<10;t++)for(let e=0;e<10;e++)if(null==o.gameboard.board[t][e].ship&&0==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}else if(null!=o.gameboard.board[t][e].ship&&0==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-ship"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}else if(null==o.gameboard.board[t][e].ship&&1==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-hit"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}else if(null!=o.gameboard.board[t][e].ship&&1==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-ship-hit"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}}function s(){n(a);for(let t=0;t<10;t++)for(let e=0;e<10;e++)if(null==d.gameboard.board[t][e].ship&&0==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}else if(null!=d.gameboard.board[t][e].ship&&0==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}else if(null==d.gameboard.board[t][e].ship&&1==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-hit"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}else if(null!=d.gameboard.board[t][e].ship&&1==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-ship-hit"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}Array.from(document.querySelectorAll(".computer-grid > div")).forEach((t=>{t.addEventListener("click",h)}))}function n(t){for(;t.firstChild;)t.removeChild(t.firstChild)}let o=new i,d=new class extends i{generateCoord(){return Math.floor(10*Math.random())}takeTurnAI(t){let e=0,i=0,r=!0;for(;r;)e=this.generateCoord(),i=this.generateCoord(),0==t.board[e][i].isHit&&(t.receiveAttack(e,i),r=!1)}};function h(t){let e=t.target.id,i=e[0],r=e[1];0==d.gameboard.board[i][r].isHit&&(o.takeTurn(d.gameboard,i,r),s(),function(){let t=Array.from(document.querySelectorAll(".computer-grid > div"));d.gameboard.allShipsSunk()?(console.log("You Win!"),t.forEach((t=>{t.removeEventListener("click",h)}))):o.gameboard.allShipsSunk()&&(console.log("You Lose!"),t.forEach((t=>{t.removeEventListener("click",h)})))}(),d.takeTurnAI(o.gameboard),l())}o.gameboard.placeShip(2,3,5),o.gameboard.placeShip(0,1,4),o.gameboard.placeShip(4,4,3),o.gameboard.placeShip(6,7,3),o.gameboard.placeShip(8,1,2),d.gameboard.placeShip(0,1,2),l(),s()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,