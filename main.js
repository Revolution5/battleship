(()=>{"use strict";class i{constructor(i){this.length=i,this.hits=0,this.sunk=!1}get length(){return this._length}set length(i){this._length=i}hit(){this.hits+=1,this.isSunk()}isSunk(){this.hits==this.length&&(this.sunk=!0)}}class t{constructor(){this.board=[new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1})))],this.ships=[]}placeShip(t,l,e){if(null==this.board[t][l].ship){let s=new i(e);this.ships.push(s);for(let i=l;i<l+e;i++)this.board[t][i].ship=s}}receiveAttack(i,t){null!=this.board[i][t].ship?(this.board[i][t].ship.hit(),this.board[i][t].isHit=!0):null==this.board[i][t].ship&&(this.board[i][t].isHit=!0)}allShipsSunk(){if(this.ships.every((i=>1==i.sunk)))return!0}}class l{constructor(i){this.isComputer=i,this.gameboard=new t}generateCoord(){return Math.floor(10*Math.random())}takeTurn(i,t,l){i.receiveAttack(t,l)}takeTurnAI(i){let t=0,l=0,e=!0;for(;e;)t=this.generateCoord(),l=this.generateCoord(),0==i.board[t][l].isHit&&(i.receiveAttack(t,l),e=!1)}}let e=new l(!1),s=new l(!0),r=document.querySelector(".human-grid"),n=document.querySelector(".computer-grid");function a(){h(r);for(let i=0;i<10;i++)for(let t=0;t<10;t++)if(null==e.gameboard.board[i][t].ship&&0==e.gameboard.board[i][t].isHit){let l=document.createElement("div");l.classList.add("square"),l.setAttribute("id",i.toString()+t.toString()),r.appendChild(l)}else if(null!=e.gameboard.board[i][t].ship&&0==e.gameboard.board[i][t].isHit){let l=document.createElement("div");l.classList.add("square-ship"),l.setAttribute("id",i.toString()+t.toString()),r.appendChild(l)}}function h(i){for(;i.firstChild;)i.removeChild(i.firstChild)}a(),function(){h(n);for(let i=0;i<10;i++)for(let t=0;t<10;t++)if(null==s.gameboard.board[i][t].ship&&0==s.gameboard.board[i][t].isHit){let l=document.createElement("div");l.classList.add("square"),l.setAttribute("id",i.toString()+t.toString()),n.appendChild(l)}}(),e.gameboard.placeShip(0,1,4),e.gameboard.placeShip(2,3,5),a()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,