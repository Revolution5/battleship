(()=>{"use strict";class t{constructor(t){this.length=t,this.hits=0,this.sunk=!1}get length(){return this._length}set length(t){this._length=t}hit(){this.hits+=1,this.isSunk()}isSunk(){this.hits==this.length&&(this.sunk=!0)}}class i{constructor(){this.board=[new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1})))],this.ships=[]}placeShip(i,e,a){if(null==this.board[i][e].ship){let r=new t(a);this.ships.push(r);for(let t=e;t<e+a;t++)this.board[i][t].ship=r}}receiveAttack(t,i){null!=this.board[t][i].ship?(this.board[t][i].ship.hit(),this.board[t][i].isHit=!0):null==this.board[t][i].ship&&(this.board[t][i].isHit=!0)}allShipsSunk(){if(this.ships.every((t=>1==t.sunk)))return!0}}class e{constructor(t){this.isComputer=t,this.gameboard=new i}generateCoord(){return Math.floor(10*Math.random())}takeTurn(t,i,e){t.receiveAttack(i,e)}takeTurnAI(t){let i=0,e=0,a=!0;for(;a;)i=this.generateCoord(),e=this.generateCoord(),0==t.board[i][e].isHit&&(t.receiveAttack(i,e),a=!1)}}let a=new e(!1),r=new e(!0),l=document.querySelector(".human-grid"),s=document.querySelector(".computer-grid");function n(t){for(;t.firstChild;)t.removeChild(t.firstChild)}a.gameboard.placeShip(2,3,5),a.gameboard.placeShip(0,1,4),a.gameboard.placeShip(4,4,3),a.gameboard.placeShip(6,7,3),a.gameboard.placeShip(8,1,2),r.gameboard.placeShip(0,1,2),function(){n(l);for(let t=0;t<10;t++)for(let i=0;i<10;i++)if(null==a.gameboard.board[t][i].ship&&0==a.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square"),e.setAttribute("id",t.toString()+i.toString()),l.appendChild(e)}else if(null!=a.gameboard.board[t][i].ship&&0==a.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square-ship"),e.setAttribute("id",t.toString()+i.toString()),l.appendChild(e)}else if(null==a.gameboard.board[t][i].ship&&1==a.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square-hit"),e.setAttribute("id",t.toString()+i.toString()),l.appendChild(e)}else if(null!=a.gameboard.board[t][i].ship&&1==a.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square-ship-hit"),e.setAttribute("id",t.toString()+i.toString()),l.appendChild(e)}}(),function(){n(s);for(let t=0;t<10;t++)for(let i=0;i<10;i++)if(null==r.gameboard.board[t][i].ship&&0==r.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square"),e.setAttribute("id",t.toString()+i.toString()),s.appendChild(e)}else if(null!=r.gameboard.board[t][i].ship&&0==r.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square"),e.setAttribute("id",t.toString()+i.toString()),s.appendChild(e)}else if(null==r.gameboard.board[t][i].ship&&1==r.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square-hit"),e.setAttribute("id",t.toString()+i.toString()),s.appendChild(e)}else if(null!=r.gameboard.board[t][i].ship&&1==r.gameboard.board[t][i].isHit){let e=document.createElement("div");e.classList.add("square-ship-hit"),e.setAttribute("id",t.toString()+i.toString()),s.appendChild(e)}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,