(()=>{"use strict";class e{constructor(e){this.length=e,this.hits=0,this.sunk=!1}get length(){return this._length}set length(e){this._length=e}hit(){this.hits+=1,this.isSunk()}isSunk(){this.hits==this.length&&(this.sunk=!0)}}class t{constructor(){this.board=[new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1})))],this.ships=[]}resetBoard(){this.board=[new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1})))],this.ships=[]}placeShip(t,i,l){if(null==this.board[t][i].ship){let r=new e(l);for(let e=i;e<i+l;e++)null==this.board[t][e].ship&&(this.board[t][e].ship=r);this.ships.push(r)}}receiveAttack(e,t){null!=this.board[e][t].ship?(this.board[e][t].ship.hit(),this.board[e][t].isHit=!0):null==this.board[e][t].ship&&(this.board[e][t].isHit=!0)}allShipsSunk(){if(this.ships.every((e=>1==e.sunk)))return!0}}class i{constructor(){this.gameboard=new t}generateCoord(){return Math.floor(10*Math.random())}takeTurn(e,t,i){e.receiveAttack(t,i)}takeTurnAI(e){let t=0,i=0,l=!0;for(;l;)t=this.generateCoord(),i=this.generateCoord(),0==e.board[t][i].isHit&&(e.receiveAttack(t,i),l=!1)}}let l=document.querySelector(".human-grid"),r=document.querySelector(".computer-grid"),a=document.querySelector(".new-round"),n=document.querySelector(".winner-text > h1");function s(){d(l);for(let e=0;e<10;e++)for(let t=0;t<10;t++)if(null==u.gameboard.board[e][t].ship&&0==u.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",e.toString()+t.toString()),l.appendChild(i)}else if(null!=u.gameboard.board[e][t].ship&&0==u.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square-ship"),i.setAttribute("id",e.toString()+t.toString()),l.appendChild(i)}else if(null==u.gameboard.board[e][t].ship&&1==u.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square-hit"),i.setAttribute("id",e.toString()+t.toString()),l.appendChild(i)}else if(null!=u.gameboard.board[e][t].ship&&1==u.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square-ship-hit"),i.setAttribute("id",e.toString()+t.toString()),l.appendChild(i)}}function o(){d(r);for(let e=0;e<10;e++)for(let t=0;t<10;t++)if(null==h.gameboard.board[e][t].ship&&0==h.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",e.toString()+t.toString()),r.appendChild(i)}else if(null!=h.gameboard.board[e][t].ship&&0==h.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square-ship"),i.setAttribute("id",e.toString()+t.toString()),r.appendChild(i)}else if(null==h.gameboard.board[e][t].ship&&1==h.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square-hit"),i.setAttribute("id",e.toString()+t.toString()),r.appendChild(i)}else if(null!=h.gameboard.board[e][t].ship&&1==h.gameboard.board[e][t].isHit){let i=document.createElement("div");i.classList.add("square-ship-hit"),i.setAttribute("id",e.toString()+t.toString()),r.appendChild(i)}Array.from(document.querySelectorAll(".computer-grid > div")).forEach((e=>{e.addEventListener("click",c)}))}function d(e){for(;e.firstChild;)e.removeChild(e.firstChild)}a.addEventListener("click",(function(e){n.textContent="",m()}));let u=new i,h=new class extends i{generateCoord(){return Math.floor(10*Math.random())}takeTurnAI(e){let t=0,i=0,l=!0;for(;l;)t=this.generateCoord(),i=this.generateCoord(),0==e.board[t][i].isHit&&(e.receiveAttack(t,i),l=!1)}placeRandomShip(e){let t=0,i=0,l=!0;for(;l;)t=this.generateCoord(),i=this.generateCoord(),this.gameboard.placeShip(t,i,e)&&(l=!1)}},p=document.querySelector(".new-round");function c(e){let t=e.target.id,i=t[0],l=t[1];0==h.gameboard.board[i][l].isHit&&(u.takeTurn(h.gameboard,i,l),o(),h.takeTurnAI(u.gameboard),s(),function(){let e=Array.from(document.querySelectorAll(".computer-grid > div")),t=document.querySelector(".winner-text > h1");h.gameboard.allShipsSunk()?(t.textContent="You Win!",e.forEach((e=>{e.removeEventListener("click",c)})),p.style.display="block"):u.gameboard.allShipsSunk()&&(t.textContent="You Lose!",e.forEach((e=>{e.removeEventListener("click",c)})),p.style.display="block")}())}function m(){u.gameboard.resetBoard(),h.gameboard.resetBoard(),p.style.display="none",u.gameboard.placeShip(2,3,5),u.gameboard.placeShip(0,1,4),u.gameboard.placeShip(4,4,3),u.gameboard.placeShip(6,7,3),u.gameboard.placeShip(8,1,2),h.placeRandomShip(5),h.placeRandomShip(4),h.placeRandomShip(3),h.placeRandomShip(3),h.placeRandomShip(2),s(),o()}m()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,