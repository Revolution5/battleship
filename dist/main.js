(()=>{"use strict";class t{constructor(t){this.length=t,this.hits=0,this.sunk=!1}get length(){return this._length}set length(t){this._length=t}hit(){this.hits+=1,this.isSunk()}isSunk(){this.hits==this.length&&(this.sunk=!0)}}class e{constructor(){this.board=[new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1}))),new Array(10).fill(null).map((()=>({ship:null,isHit:!1})))],this.ships=[]}placeShip(e,i,r){if(null==this.board[e][i].ship){let a=new t(r);this.ships.push(a);for(let t=i;t<i+r;t++)this.board[e][t].ship=a}}receiveAttack(t,e){null!=this.board[t][e].ship?(this.board[t][e].ship.hit(),this.board[t][e].isHit=!0):null==this.board[t][e].ship&&(this.board[t][e].isHit=!0)}allShipsSunk(){if(this.ships.every((t=>1==t.sunk)))return!0}}class i{constructor(){this.gameboard=new e}generateCoord(){return Math.floor(10*Math.random())}takeTurn(t,e,i){t.receiveAttack(e,i)}takeTurnAI(t){let e=0,i=0,r=!0;for(;r;)e=this.generateCoord(),i=this.generateCoord(),0==t.board[e][i].isHit&&(t.receiveAttack(e,i),r=!1)}}let r=document.querySelector(".human-grid"),a=document.querySelector(".computer-grid");function l(){n(r);for(let t=0;t<10;t++)for(let e=0;e<10;e++)if(null==o.gameboard.board[t][e].ship&&0==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}else if(null!=o.gameboard.board[t][e].ship&&0==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-ship"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}else if(null==o.gameboard.board[t][e].ship&&1==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-hit"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}else if(null!=o.gameboard.board[t][e].ship&&1==o.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-ship-hit"),i.setAttribute("id",t.toString()+e.toString()),r.appendChild(i)}}function s(){n(a);for(let t=0;t<10;t++)for(let e=0;e<10;e++)if(null==d.gameboard.board[t][e].ship&&0==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}else if(null!=d.gameboard.board[t][e].ship&&0==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}else if(null==d.gameboard.board[t][e].ship&&1==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-hit"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}else if(null!=d.gameboard.board[t][e].ship&&1==d.gameboard.board[t][e].isHit){let i=document.createElement("div");i.classList.add("square-ship-hit"),i.setAttribute("id",t.toString()+e.toString()),a.appendChild(i)}Array.from(document.querySelectorAll(".computer-grid > div")).forEach((t=>{t.addEventListener("click",u)}))}function n(t){for(;t.firstChild;)t.removeChild(t.firstChild)}let o=new i,d=new class extends i{generateCoord(){return Math.floor(10*Math.random())}takeTurnAI(t){let e=0,i=0,r=!0;for(;r;)e=this.generateCoord(),i=this.generateCoord(),0==t.board[e][i].isHit&&(t.receiveAttack(e,i),r=!1)}};function u(t){let e=t.target.id,i=e[0],r=e[1];0==d.gameboard.board[i][r].isHit&&(o.takeTurn(d.gameboard,i,r),s(),d.takeTurnAI(o.gameboard),l(),function(){let t=Array.from(document.querySelectorAll(".computer-grid > div")),e=document.querySelector(".winner-text > h1");d.gameboard.allShipsSunk()?(e.textContent="You Win!",t.forEach((t=>{t.removeEventListener("click",u)}))):o.gameboard.allShipsSunk()&&(e.textContent="You Lose!",t.forEach((t=>{t.removeEventListener("click",u)})))}())}o.gameboard.placeShip(8,1,2),d.gameboard.placeShip(0,1,2),l(),s()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aUIsaUJBQWlCLHlCQUN2RGEsRUFBYTlCLFNBQVNDLGNBQWMscUJBRXJDYyxFQUFTekIsVUFBVUgsZ0JBQ2xCMkMsRUFBV0MsWUFBYyxXQUN6QkYsRUFBZ0JYLFNBQVFYLElBQ3BCQSxFQUFPeUIsb0JBQW9CLFFBQVNaLE9BR3BDZCxFQUFNaEIsVUFBVUgsaUJBQ3BCMkMsRUFBV0MsWUFBYyxZQUN6QkYsRUFBZ0JYLFNBQVFYLElBQ3BCQSxFQUFPeUIsb0JBQW9CLFFBQVNaLE9BakJ4Q2EsSUEyQkozQixFQUFNaEIsVUFBVVYsVUFBVSxFQUFFLEVBQUUsR0FFOUJtQyxFQUFTekIsVUFBVVYsVUFBVSxFQUFFLEVBQUUsR0FFakN1QixJQUNBVyxLIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zaGlwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZ2FtZWJvYXJkLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvcGxheWVyLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZG9tLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvZ2FtZUNvbnRyb2xsZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9haS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgU2hpcCB7XG4gICAgY29uc3RydWN0b3IobGVuZ3RoKSB7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoO1xuICAgICAgICB0aGlzLmhpdHMgPSAwO1xuICAgICAgICB0aGlzLnN1bmsgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBnZXQgbGVuZ3RoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbGVuZ3RoO1xuICAgIH1cblxuICAgIHNldCBsZW5ndGgobGVuZ3RoKSB7XG4gICAgICAgIHRoaXMuX2xlbmd0aCA9IGxlbmd0aDtcbiAgICB9XG5cbiAgICBoaXQoKSB7XG4gICAgICAgIHRoaXMuaGl0cyArPSAxO1xuICAgICAgICB0aGlzLmlzU3VuaygpO1xuICAgIH1cblxuICAgIGlzU3VuaygpIHtcbiAgICAgICAgaWYodGhpcy5oaXRzID09IHRoaXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aGlzLnN1bmsgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgU2hpcCB9IGZyb20gXCIuL3NoaXBcIjtcblxuZXhwb3J0IGNsYXNzIEdhbWVib2FyZCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuYm9hcmQgPSBbXG4gICAgICAgICAgICBuZXcgQXJyYXkoMTApLmZpbGwobnVsbCkubWFwKCgpID0+ICh7c2hpcDogbnVsbCwgaXNIaXQ6IGZhbHNlfSkpLFxuICAgICAgICAgICAgbmV3IEFycmF5KDEwKS5maWxsKG51bGwpLm1hcCgoKSA9PiAoe3NoaXA6IG51bGwsIGlzSGl0OiBmYWxzZX0pKSxcbiAgICAgICAgICAgIG5ldyBBcnJheSgxMCkuZmlsbChudWxsKS5tYXAoKCkgPT4gKHtzaGlwOiBudWxsLCBpc0hpdDogZmFsc2V9KSksXG4gICAgICAgICAgICBuZXcgQXJyYXkoMTApLmZpbGwobnVsbCkubWFwKCgpID0+ICh7c2hpcDogbnVsbCwgaXNIaXQ6IGZhbHNlfSkpLFxuICAgICAgICAgICAgbmV3IEFycmF5KDEwKS5maWxsKG51bGwpLm1hcCgoKSA9PiAoe3NoaXA6IG51bGwsIGlzSGl0OiBmYWxzZX0pKSxcbiAgICAgICAgICAgIG5ldyBBcnJheSgxMCkuZmlsbChudWxsKS5tYXAoKCkgPT4gKHtzaGlwOiBudWxsLCBpc0hpdDogZmFsc2V9KSksXG4gICAgICAgICAgICBuZXcgQXJyYXkoMTApLmZpbGwobnVsbCkubWFwKCgpID0+ICh7c2hpcDogbnVsbCwgaXNIaXQ6IGZhbHNlfSkpLFxuICAgICAgICAgICAgbmV3IEFycmF5KDEwKS5maWxsKG51bGwpLm1hcCgoKSA9PiAoe3NoaXA6IG51bGwsIGlzSGl0OiBmYWxzZX0pKSxcbiAgICAgICAgICAgIG5ldyBBcnJheSgxMCkuZmlsbChudWxsKS5tYXAoKCkgPT4gKHtzaGlwOiBudWxsLCBpc0hpdDogZmFsc2V9KSksXG4gICAgICAgICAgICBuZXcgQXJyYXkoMTApLmZpbGwobnVsbCkubWFwKCgpID0+ICh7c2hpcDogbnVsbCwgaXNIaXQ6IGZhbHNlfSkpXG4gICAgICAgIF1cblxuICAgICAgICB0aGlzLnNoaXBzID0gW11cbiAgICB9XG5cbiAgICBwbGFjZVNoaXAoeFBvcywgeVBvcywgbGVuZ3RoKSB7XG4gICAgICAgIGlmKHRoaXMuYm9hcmRbeFBvc11beVBvc10uc2hpcCA9PSBudWxsKSB7XG4gICAgICAgICAgICBsZXQgbmV3U2hpcCA9IG5ldyBTaGlwKGxlbmd0aCk7XG4gICAgICAgICAgICB0aGlzLnNoaXBzLnB1c2gobmV3U2hpcCk7XG4gICAgICAgICAgICAvL2hvcml6b250YWwgc2hpcFxuICAgICAgICAgICAgZm9yKGxldCBpID0geVBvczsgaSA8IHlQb3MgKyBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHRoaXMuYm9hcmRbeFBvc11baV0uc2hpcCA9IG5ld1NoaXA7ICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZWNlaXZlQXR0YWNrKHhQb3MsIHlQb3MpIHtcbiAgICAgICAgLy9pZiB0aGUgc3F1YXJlIGhhcyBhIHNoaXAgb24gaXRcbiAgICAgICAgaWYodGhpcy5ib2FyZFt4UG9zXVt5UG9zXS5zaGlwICE9IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuYm9hcmRbeFBvc11beVBvc10uc2hpcC5oaXQoKTtcbiAgICAgICAgICAgIHRoaXMuYm9hcmRbeFBvc11beVBvc10uaXNIaXQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vaWYgdGhlcmUgc3F1YXJlIGRvZXMgbm90IGhhdmUgYSBzaGlwIG9uIGl0XG4gICAgICAgIGVsc2UgaWYodGhpcy5ib2FyZFt4UG9zXVt5UG9zXS5zaGlwID09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMuYm9hcmRbeFBvc11beVBvc10uaXNIaXQgPSB0cnVlOyAgIFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWxsU2hpcHNTdW5rKCkge1xuICAgICAgICBpZih0aGlzLnNoaXBzLmV2ZXJ5KHNoaXAgPT4gc2hpcC5zdW5rID09IHRydWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH1cbn0iLCJpbXBvcnQgeyBHYW1lYm9hcmQgfSBmcm9tIFwiLi9nYW1lYm9hcmRcIjtcblxuZXhwb3J0IGNsYXNzIFBsYXllciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZ2FtZWJvYXJkID0gbmV3IEdhbWVib2FyZDtcbiAgICB9XG5cbiAgICBnZW5lcmF0ZUNvb3JkKCkge1xuICAgICAgICAvL3JhbmRvbSBudW1iZXIgYmV0d2VlbiAwIGFuZCA5XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gICAgfVxuXG4gICAgdGFrZVR1cm4oZW5lbXlHYW1lYm9hcmQsIHhQb3MsIHlQb3MpIHtcbiAgICAgICAgZW5lbXlHYW1lYm9hcmQucmVjZWl2ZUF0dGFjayh4UG9zLCB5UG9zKTsgXG4gICAgfVxuXG4gICAgdGFrZVR1cm5BSShlbmVteUdhbWVib2FyZCkge1xuICAgICAgICBsZXQgeFBvcyA9IDA7XG4gICAgICAgIGxldCB5UG9zID0gMDtcbiAgICAgICAgbGV0IGtlZXBHb2luZyA9IHRydWU7XG5cbiAgICAgICAgd2hpbGUoa2VlcEdvaW5nKSB7XG4gICAgICAgICAgICB4UG9zID0gdGhpcy5nZW5lcmF0ZUNvb3JkKCk7XG4gICAgICAgICAgICB5UG9zID0gdGhpcy5nZW5lcmF0ZUNvb3JkKCk7XG4gICAgICAgICAgICBpZihlbmVteUdhbWVib2FyZC5ib2FyZFt4UG9zXVt5UG9zXS5pc0hpdCA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGVuZW15R2FtZWJvYXJkLnJlY2VpdmVBdHRhY2soeFBvcywgeVBvcyk7XG4gICAgICAgICAgICAgICAga2VlcEdvaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiaW1wb3J0IHsgaHVtYW4sIGNvbXB1dGVyLCBjbGlja0hhbmRsZXIgfSBmcm9tIFwiLi9nYW1lQ29udHJvbGxlclwiO1xuXG5sZXQgaHVtYW5HcmlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5odW1hbi1ncmlkXCIpO1xubGV0IGNvbXB1dGVyR3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29tcHV0ZXItZ3JpZFwiKTtcblxuZXhwb3J0IGZ1bmN0aW9uIHBvcHVsYXRlUGxheWVyQm9hcmQoKSB7XG4gICAgY2xlYXJCb2FyZChodW1hbkdyaWQpO1xuXG4gICAgZm9yKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgICAgZm9yKGxldCBqID0gMDsgaiA8IDEwOyBqKyspIHtcbiAgICAgICAgICAgIC8vbm8gc2hpcCBubyBoaXRcbiAgICAgICAgICAgIGlmKGh1bWFuLmdhbWVib2FyZC5ib2FyZFtpXVtqXS5zaGlwID09IG51bGwgJiYgaHVtYW4uZ2FtZWJvYXJkLmJvYXJkW2ldW2pdLmlzSGl0ID09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoXCJzcXVhcmVcIik7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImlkXCIsIGkudG9TdHJpbmcoKSArIGoudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgaHVtYW5HcmlkLmFwcGVuZENoaWxkKHNxdWFyZSk7ICAgXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL3llcyBzaGlwIG5vIGhpdFxuICAgICAgICAgICAgZWxzZSBpZihodW1hbi5nYW1lYm9hcmQuYm9hcmRbaV1bal0uc2hpcCAhPSBudWxsICYmIGh1bWFuLmdhbWVib2FyZC5ib2FyZFtpXVtqXS5pc0hpdCA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGxldCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKFwic3F1YXJlLXNoaXBcIik7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImlkXCIsIGkudG9TdHJpbmcoKSArIGoudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgaHVtYW5HcmlkLmFwcGVuZENoaWxkKHNxdWFyZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL25vIHNoaXAgeWVzIGhpdFxuICAgICAgICAgICAgZWxzZSBpZihodW1hbi5nYW1lYm9hcmQuYm9hcmRbaV1bal0uc2hpcCA9PSBudWxsICYmIGh1bWFuLmdhbWVib2FyZC5ib2FyZFtpXVtqXS5pc0hpdCA9PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgbGV0IHNxdWFyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgICAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoXCJzcXVhcmUtaGl0XCIpO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpLnRvU3RyaW5nKCkgKyBqLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIGh1bWFuR3JpZC5hcHBlbmRDaGlsZChzcXVhcmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy95ZXMgc2hpcCB5ZXMgaGl0XG4gICAgICAgICAgICBlbHNlIGlmKGh1bWFuLmdhbWVib2FyZC5ib2FyZFtpXVtqXS5zaGlwICE9IG51bGwgJiYgaHVtYW4uZ2FtZWJvYXJkLmJvYXJkW2ldW2pdLmlzSGl0ID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZChcInNxdWFyZS1zaGlwLWhpdFwiKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiaWRcIiwgaS50b1N0cmluZygpICsgai50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICBodW1hbkdyaWQuYXBwZW5kQ2hpbGQoc3F1YXJlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHBvcHVsYXRlRW5lbXlCb2FyZCgpIHtcbiAgICBjbGVhckJvYXJkKGNvbXB1dGVyR3JpZCk7XG5cbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgMTA7IGorKykge1xuICAgICAgICAgICAgLy9ubyBzaGlwIG5vIGhpdFxuICAgICAgICAgICAgaWYoY29tcHV0ZXIuZ2FtZWJvYXJkLmJvYXJkW2ldW2pdLnNoaXAgPT0gbnVsbCAmJiBjb21wdXRlci5nYW1lYm9hcmQuYm9hcmRbaV1bal0uaXNIaXQgPT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZChcInNxdWFyZVwiKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiaWRcIiwgaS50b1N0cmluZygpICsgai50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICBjb21wdXRlckdyaWQuYXBwZW5kQ2hpbGQoc3F1YXJlKTsgICBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8veWVzIHNoaXAgbm8gaGl0IFxuICAgICAgICAgICAgLy9jb21wdXRlciBzaGlwIG11c3QgYmUgaW52aXNpYmxlIHRvIHRoZSBodW1hbiBwbGF5ZXIgYmVmb3JlIGJlaW5nIGhpdFxuICAgICAgICAgICAgZWxzZSBpZihjb21wdXRlci5nYW1lYm9hcmQuYm9hcmRbaV1bal0uc2hpcCAhPSBudWxsICYmIGNvbXB1dGVyLmdhbWVib2FyZC5ib2FyZFtpXVtqXS5pc0hpdCA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGxldCBzcXVhcmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKFwic3F1YXJlXCIpO1xuICAgICAgICAgICAgICAgIHNxdWFyZS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBpLnRvU3RyaW5nKCkgKyBqLnRvU3RyaW5nKCkpO1xuICAgICAgICAgICAgICAgIGNvbXB1dGVyR3JpZC5hcHBlbmRDaGlsZChzcXVhcmUpOyBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vbm8gc2hpcCB5ZXMgaGl0XG4gICAgICAgICAgICBlbHNlIGlmKGNvbXB1dGVyLmdhbWVib2FyZC5ib2FyZFtpXVtqXS5zaGlwID09IG51bGwgJiYgY29tcHV0ZXIuZ2FtZWJvYXJkLmJvYXJkW2ldW2pdLmlzSGl0ID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZChcInNxdWFyZS1oaXRcIik7XG4gICAgICAgICAgICAgICAgc3F1YXJlLnNldEF0dHJpYnV0ZShcImlkXCIsIGkudG9TdHJpbmcoKSArIGoudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgY29tcHV0ZXJHcmlkLmFwcGVuZENoaWxkKHNxdWFyZSk7IFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy95ZXMgc2hpcCB5ZXMgaGl0XG4gICAgICAgICAgICBlbHNlIGlmKGNvbXB1dGVyLmdhbWVib2FyZC5ib2FyZFtpXVtqXS5zaGlwICE9IG51bGwgJiYgY29tcHV0ZXIuZ2FtZWJvYXJkLmJvYXJkW2ldW2pdLmlzSGl0ID09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBsZXQgc3F1YXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZChcInNxdWFyZS1zaGlwLWhpdFwiKTtcbiAgICAgICAgICAgICAgICBzcXVhcmUuc2V0QXR0cmlidXRlKFwiaWRcIiwgaS50b1N0cmluZygpICsgai50b1N0cmluZygpKTtcbiAgICAgICAgICAgICAgICBjb21wdXRlckdyaWQuYXBwZW5kQ2hpbGQoc3F1YXJlKTsgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgY29tcHV0ZXJTcXVhcmVzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmNvbXB1dGVyLWdyaWQgPiBkaXZcIikpO1xuXG4gICAgY29tcHV0ZXJTcXVhcmVzLmZvckVhY2goc3F1YXJlID0+IHtcbiAgICAgICAgc3F1YXJlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbGlja0hhbmRsZXIpO1xuICAgIH0pXG59XG5cbmZ1bmN0aW9uIGNsZWFyQm9hcmQoYm9hcmQpIHtcbiAgICB3aGlsZShib2FyZC5maXJzdENoaWxkKSB7XG4gICAgICAgIGJvYXJkLnJlbW92ZUNoaWxkKGJvYXJkLmZpcnN0Q2hpbGQpO1xuICAgIH1cbn0iLCJpbXBvcnQgeyBQbGF5ZXIgfSBmcm9tIFwiLi9wbGF5ZXJcIjtcbmltcG9ydCB7IEFJIH0gZnJvbSBcIi4vYWlcIjtcbmltcG9ydCB7IHBvcHVsYXRlRW5lbXlCb2FyZCwgcG9wdWxhdGVQbGF5ZXJCb2FyZCB9IGZyb20gXCIuL2RvbVwiO1xuXG5leHBvcnQgbGV0IGh1bWFuID0gbmV3IFBsYXllcigpO1xuZXhwb3J0IGxldCBjb21wdXRlciA9IG5ldyBBSSgpO1xuXG5leHBvcnQgZnVuY3Rpb24gY2xpY2tIYW5kbGVyKGUpIHtcbiAgICBsZXQgY2xpY2tlZCA9IGUudGFyZ2V0LmlkO1xuICAgIGxldCB4ID0gY2xpY2tlZFswXTtcbiAgICBsZXQgeSA9IGNsaWNrZWRbMV07XG4gICAgaWYoY29tcHV0ZXIuZ2FtZWJvYXJkLmJvYXJkW3hdW3ldLmlzSGl0ID09IGZhbHNlKSB7XG4gICAgICAgIGh1bWFuLnRha2VUdXJuKGNvbXB1dGVyLmdhbWVib2FyZCwgeCwgeSlcbiAgICAgICAgcG9wdWxhdGVFbmVteUJvYXJkKCk7XG4gICAgICAgIGNvbXB1dGVyLnRha2VUdXJuQUkoaHVtYW4uZ2FtZWJvYXJkKTtcbiAgICAgICAgcG9wdWxhdGVQbGF5ZXJCb2FyZCgpOyBcbiAgICAgICAgY2hlY2tGb3JXaW4oKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrRm9yV2luKCkge1xuICAgIGxldCBjb21wdXRlclNxdWFyZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuY29tcHV0ZXItZ3JpZCA+IGRpdlwiKSk7XG4gICAgbGV0IHdpbm5lclRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLndpbm5lci10ZXh0ID4gaDFcIik7XG5cbiAgICBpZihjb21wdXRlci5nYW1lYm9hcmQuYWxsU2hpcHNTdW5rKCkpIHtcbiAgICAgICAgd2lubmVyVGV4dC50ZXh0Q29udGVudCA9IFwiWW91IFdpbiFcIlxuICAgICAgICBjb21wdXRlclNxdWFyZXMuZm9yRWFjaChzcXVhcmUgPT4ge1xuICAgICAgICAgICAgc3F1YXJlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbGlja0hhbmRsZXIpO1xuICAgICAgICB9KVxuICAgIH1cbiAgICBlbHNlIGlmKGh1bWFuLmdhbWVib2FyZC5hbGxTaGlwc1N1bmsoKSkge1xuICAgICAgICB3aW5uZXJUZXh0LnRleHRDb250ZW50ID0gXCJZb3UgTG9zZSFcIlxuICAgICAgICBjb21wdXRlclNxdWFyZXMuZm9yRWFjaChzcXVhcmUgPT4ge1xuICAgICAgICAgICAgc3F1YXJlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjbGlja0hhbmRsZXIpO1xuICAgICAgICB9KVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0YXJ0R2FtZSgpIHtcbiAgICAvLyBodW1hbi5nYW1lYm9hcmQucGxhY2VTaGlwKDIsMyw1KTtcbiAgICAvLyBodW1hbi5nYW1lYm9hcmQucGxhY2VTaGlwKDAsMSw0KTtcbiAgICAvLyBodW1hbi5nYW1lYm9hcmQucGxhY2VTaGlwKDQsNCwzKTtcbiAgICAvLyBodW1hbi5nYW1lYm9hcmQucGxhY2VTaGlwKDYsNywzKTtcbiAgICBodW1hbi5nYW1lYm9hcmQucGxhY2VTaGlwKDgsMSwyKTtcblxuICAgIGNvbXB1dGVyLmdhbWVib2FyZC5wbGFjZVNoaXAoMCwxLDIpO1xuICAgIFxuICAgIHBvcHVsYXRlUGxheWVyQm9hcmQoKTtcbiAgICBwb3B1bGF0ZUVuZW15Qm9hcmQoKTtcbn0iLCJpbXBvcnQgeyBQbGF5ZXIgfSBmcm9tIFwiLi9wbGF5ZXJcIjtcblxuZXhwb3J0IGNsYXNzIEFJIGV4dGVuZHMgUGxheWVyIHtcbiAgICBcbiAgICBnZW5lcmF0ZUNvb3JkKCkge1xuICAgICAgICAvL3JhbmRvbSBudW1iZXIgYmV0d2VlbiAwIGFuZCA5XG4gICAgICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gICAgfVxuXG4gICAgdGFrZVR1cm5BSShlbmVteUdhbWVib2FyZCkge1xuICAgICAgICBsZXQgeFBvcyA9IDA7XG4gICAgICAgIGxldCB5UG9zID0gMDtcbiAgICAgICAgbGV0IGtlZXBHb2luZyA9IHRydWU7XG5cbiAgICAgICAgd2hpbGUoa2VlcEdvaW5nKSB7XG4gICAgICAgICAgICB4UG9zID0gdGhpcy5nZW5lcmF0ZUNvb3JkKCk7XG4gICAgICAgICAgICB5UG9zID0gdGhpcy5nZW5lcmF0ZUNvb3JkKCk7XG4gICAgICAgICAgICBpZihlbmVteUdhbWVib2FyZC5ib2FyZFt4UG9zXVt5UG9zXS5pc0hpdCA9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIGVuZW15R2FtZWJvYXJkLnJlY2VpdmVBdHRhY2soeFBvcywgeVBvcyk7XG4gICAgICAgICAgICAgICAga2VlcEdvaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59Il0sIm5hbWVzIjpbIlNoaXAiLCJjb25zdHJ1Y3RvciIsImxlbmd0aCIsInRoaXMiLCJoaXRzIiwic3VuayIsIl9sZW5ndGgiLCJoaXQiLCJpc1N1bmsiLCJHYW1lYm9hcmQiLCJib2FyZCIsIkFycmF5IiwiZmlsbCIsIm1hcCIsInNoaXAiLCJpc0hpdCIsInNoaXBzIiwicGxhY2VTaGlwIiwieFBvcyIsInlQb3MiLCJuZXdTaGlwIiwicHVzaCIsImkiLCJyZWNlaXZlQXR0YWNrIiwiYWxsU2hpcHNTdW5rIiwiZXZlcnkiLCJQbGF5ZXIiLCJnYW1lYm9hcmQiLCJnZW5lcmF0ZUNvb3JkIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwidGFrZVR1cm4iLCJlbmVteUdhbWVib2FyZCIsInRha2VUdXJuQUkiLCJrZWVwR29pbmciLCJodW1hbkdyaWQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb21wdXRlckdyaWQiLCJwb3B1bGF0ZVBsYXllckJvYXJkIiwiY2xlYXJCb2FyZCIsImoiLCJodW1hbiIsInNxdWFyZSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJ0b1N0cmluZyIsImFwcGVuZENoaWxkIiwicG9wdWxhdGVFbmVteUJvYXJkIiwiY29tcHV0ZXIiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiY2xpY2tIYW5kbGVyIiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiZSIsImNsaWNrZWQiLCJ0YXJnZXQiLCJpZCIsIngiLCJ5IiwiY29tcHV0ZXJTcXVhcmVzIiwid2lubmVyVGV4dCIsInRleHRDb250ZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImNoZWNrRm9yV2luIl0sInNvdXJjZVJvb3QiOiIifQ==